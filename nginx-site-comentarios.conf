# ===================================================================
# Bloco do Servidor para HTTP (Porta 80)
# Este bloco captura todo o tráfego não criptografado e o redireciona
# permanentemente (301) para a versão segura HTTPS.
# ===================================================================
server {
    # Escuta por conexões na porta 80 (HTTP).
    listen 80;
    # Define os domínios para os quais este bloco de servidor responde.
    # DOMINIO será substituído pelo script (ex: seudominio.com).
    server_name DOMINIO www.DOMINIO;
    # Define o diretório raiz onde os arquivos do site estão localizados.
    # PROJETO será substituído pelo script (ex: /var/www/meusite).
    root  /var/www/PROJETO;
    # Define a ordem dos arquivos que o Nginx procurará como página inicial.
    index index.php index.html index.htm;
    # Define o caminho para o log de acesso específico deste site.
    access_log /var/log/nginx/access.DOMINIO.log;
    
    # --- Otimizações e Cabeçalhos de Segurança ---
    # Tempo que uma conexão persistente ficará aberta.
    keepalive_timeout 20;
    # Tamanho máximo de um arquivo que pode ser enviado (upload).
    client_max_body_size 200m;
    # Tamanho do buffer para o corpo da requisição.
    client_body_buffer_size 200m;
    # Não exibe a versão do Nginx em páginas de erro.
    server_tokens off;
    # Força o navegador a usar HTTPS por um ano (HSTS).
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
    # Protege contra ataques de clickjacking.
    add_header X-Frame-Options "SAMEORIGIN" always;
    # Ativa a proteção contra XSS.
    add_header X-XSS-Protection "1; mode=block";
    # Impede a "adivinhação" de tipo de conteúdo.
    add_header X-Content-Type-Options nosniff;
    
    # --- Redirecionamento para HTTPS ---
    # Redireciona permanentemente (código 301) todo o tráfego para a versão HTTPS.
    return 301 https://$server_name$request_uri;

    # --- Regras de Bloqueio (mesmo no redirecionamento) ---
    # Bloqueia o acesso a arquivos de configuração específicos.
    location /config/ {
        deny all;
    }
    # Permite o acesso ao diretório usado pelo Let's Encrypt para renovar certificados.
    location ~ /.well-known/ {
        allow all;
    }
    # Bloqueia o acesso a arquivos de log.
    location ~* \.log$ {
        deny all;
    }
    # Bloqueia o acesso a arquivos e pastas ocultas (que começam com um ponto).
    location ~ /\. {
        deny all;
    }
    # Bloqueia ataques comuns ao xmlrpc.php do WordPress.
    location = /xmlrpc.php {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
    }
    # Bloqueia o acesso direto ao wp-cron.php do WordPress.
    location = /wp-cron.php {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
    }
}

# ===================================================================
# Bloco do Servidor para HTTPS (Porta 443)
# Este é o bloco principal que lida com o tráfego seguro do seu site.
# ===================================================================
server {
    # Escuta por conexões na porta 443 com SSL (HTTPS) e ativa o protocolo HTTP/2 para performance.
    listen 443 ssl http2;
    # Define os domínios para os quais este bloco de servidor responde.
    server_name DOMINIO www.DOMINIO;
    # Define o diretório raiz onde os arquivos do site estão localizados.
    root  /var/www/PROJETO;
    # Define a ordem dos arquivos que o Nginx procurará como página inicial.
    index index.php index.html index.htm;
    # Define o caminho para o log de acesso específico deste site.
    access_log /var/log/nginx/access.DOMINIO.log;
    
    # --- Otimizações de Performance e Limites ---
    keepalive_timeout 20;
    client_max_body_size 200m;
    client_body_buffer_size 200m;
    
    # --- Configurações de SSL/TLS ---
    # CAMINHOS DOS CERTIFICADOS - Serão preenchidos pelo Certbot (Let's Encrypt).
    # ssl_certificate /etc/letsencrypt/live/DOMINIO/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/DOMINIO/privkey.pem;
    
    # Define os protocolos TLS seguros a serem usados.
    ssl_protocols TLSv1.2 TLSv1.3;
    # Dá preferência às cifras do servidor em vez das do cliente.
    ssl_prefer_server_ciphers on;
    # Define um conjunto de cifras fortes e modernas para a criptografia.
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    # Define a curva elíptica para a troca de chaves.
    ssl_ecdh_curve secp384r1;
    # Configura um cache de sessão SSL compartilhado para acelerar conexões repetidas.
    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 24h;
    # Ativa o OCSP Stapling para acelerar a verificação do status do certificado.
    ssl_stapling on;
    ssl_stapling_verify on;
    # Define os resolvedores DNS do Google para o OCSP Stapling.
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Define o tamanho do buffer para o SSL.
    ssl_buffer_size 4k;
    
    # --- Cabeçalhos de Segurança ---
    server_tokens off;
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains; preload';
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options nosniff;
    
    # --- Regras de Localização (Location Blocks) ---

    # Permite o acesso ao diretório usado pelo Let's Encrypt para renovar certificados.
    location ~/.well-known/acme-challenge/ {
            allow all;
    }

    # Bloqueia ataques comuns ao xmlrpc.php do WordPress.
    location = /xmlrpc.php {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
    }

    # Bloqueia o acesso direto ao wp-cron.php do WordPress.
    location = /wp-cron.php {
            deny all;
            access_log off;
            log_not_found off;
            return 404;
    }
    
    # Bloqueia o acesso a arquivos de configuração específicos.
    location /config/ {
        deny all;
    }

    # Bloqueia o acesso a arquivos de log.
    location ~* \.log$ {
        deny all;
    }

    # Bloqueia o acesso a arquivos e pastas ocultas.
    location ~ /\. {
        deny all;
    }

    # Regra principal para lidar com as requisições.
    # Tenta encontrar o arquivo/diretório solicitado; se não encontrar, passa para o index.php.
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # Regra para processar arquivos .php.
    location ~ \.php$ {
        # Passa a requisição para o PHP-FPM via socket TCP.
        fastcgi_pass 127.0.0.1:9000;
        # Define timeouts para a conexão com o PHP-FPM.
        fastcgi_connect_timeout 60;
        fastcgi_send_timeout 60;
        fastcgi_read_timeout 60;
        # Define o tamanho dos buffers para a comunicação.
        fastcgi_buffer_size 256k;
        fastcgi_buffers 256 256k;
        fastcgi_busy_buffers_size 256k;
        # Define o arquivo de índice padrão para diretórios.
        fastcgi_index index.php;
        # Passa os parâmetros da requisição para o PHP.
        fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
        # Inclui os parâmetros FastCGI padrão do Nginx.
        include fastcgi_params;
    }
}
